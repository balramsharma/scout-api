= scout_scout

A library for interacting with Scout[http://scoutapp.com], a hosted server monitoring service. 
Query for metric data, manage servers, and more.

== Getting Started 

Install the gem if you haven't already:

  gem install scout_scout

Require the gem and authenticate to get your Scout on:

  require 'scout_scout'
  scout = ScoutScout.new('youraccountname', 'your@awesome.com', 'sekret')

== Basics

You can query for the following high-level objects:

* ScoutScout::Server
* ScoutScout::Group
* ScoutScout::Metric

Each of the classes have similar, Rails-like finder methods. For example:

  # all servers
  ScoutScout::Server.all

  # first server with ID=1
  server = ScoutScout::Server.first(1)

  # all groups with name =~ 'Web'
  ScoutScout::Group.all(:name => 'Web')

== Metrics

Access your metric data stored in Scout. You can retrieve data for a specific metric,
a group of metrics, and aggregated metrics. For example:

  # average value of the metric with ID=1 over the past hour
  ScoutScout::Metric.average(1)

  # maximum rate of insert queries over the previous 24 hours
  ScoutScout::Server.first(:name => "DB Server").metrics.maximum('inserts',:start => Time.now.utc-(24*3600)*2,:end => Time.now.utc-(24*3600))

  # average memory used across all servers in the 'web servers' group
  ScoutScout::Group.first(:name => 'web servers').metrics.average('mem_used')
  ScoutScout::Group.first(:name => 'web servers').metrics.average('mem_used').to_sparkline
  ScoutScout::Group.first(:name => 'web servers').metrics.average('mem_used').to_a



  # total throughput across web servers
  ScoutScout::Group.first(:name => 'web servers').metrics.average('request_rate', :aggregate => true)

== Server Management

Create and delete servers:
  
  # create a server using the server with id=6 as the template.
  ScoutScout::Server.create('heavy metal',:id => 6) => <#ScoutScout::Server>
  
  # delete the server with id=10
  ScoutScout::Server.delete(10)

== Note on Patches/Pull Requests

* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a
  commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2011 Jesse Newland, Derek Haynes. See LICENSE for details.
